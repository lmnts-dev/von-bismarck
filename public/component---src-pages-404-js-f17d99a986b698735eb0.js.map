{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/data/Styles.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO.js","webpack:///./src/components/PageGrid.js","webpack:///./src/components/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_SEO__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","module","exports","Fnt","Header","Body","Base","Size","Type","BangerWidth","Screen","Xs","Sm","Md","Lg","Xl","Grid","Nav","LgSize","MdSize","SmSize","Gutter","Top","Bottom","Right","Left","Clr","Cream","DarkCream","Tan","Navy","White","Black","Anim","Page","Direction","Duration","Color","Function","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","PageInner","styled","main","withConfig","displayName","componentId","lmnts","borderColor","wrapBg","PageGrid","react_default","GlobalStyle","createGlobalStyle","_templateObject","bgColor","Layout","gatsby_browser_entry","Fragment","Helmet_default","href","rel","components_PageGrid","_755544856"],"mappings":"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","file":"component---src-pages-404-js-f17d99a986b698735eb0.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","// Global JS Variables for Styled Components\n// Typically imported as `lmnts`\n\n// Usage\n// 1. First:\n// import * as lmnts from '../../../path/to/Styles'\n// 2. Use it in your SC: `color: ${lmnts.Clr.White};`\n\n\nmodule.exports = {\n    // Typography\n    Fnt: {\n      Header: \"'Poppins', 'San Francisco', 'Helvetica', 'Roboto', 'Arial', sans-serif\",\n      Body: \"'Poppins', 'San Francisco', 'Helvetica', 'Roboto', 'Arial', sans-serif\"\n    },\n  \n    // Base Measurements\n    Base: {\n      Size: 60,\n      Type: 14,\n      BangerWidth: \"12vw\",\n      Screen: {\n        Xs: 448,\n        Sm: 678,\n        Md: 1024,\n        Lg: 1280,\n        Xl: 1440\n      },\n      Grid: {\n        Nav: {\n          LgSize: 200,\n          MdSize: 150,\n          SmSize: 40\n        },\n        Gutter: {\n          Top: 20,\n          Bottom: 20,\n          Right: 20,\n          Left: 20\n        }\n      }\n    },\n  \n    // Color Palette\n    Clr: {\n      Cream: \"#FAF9EE\",\n      DarkCream: \"#E5E3CA\",\n      Tan: \"#DEAD87\",\n      Navy: \"#002746\",\n      White: \"#ffffff\",\n      Black: \"#000000\",\n    },\n  \n    // Animations\n    Anim: {\n      Page: {\n        Direction: \"up\",\n        Type: \"cover\",\n        Duration: 1,\n        Color: \"#e2e2e2\",\n        Function: \"ease\"\n      }\n    }\n  };","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport * as lmnts from '../data/Styles'\n\nconst PageInner = styled.main`\n  min-height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  padding-top: ${lmnts.Base.Grid.Gutter.Top + 'px'};\n  padding-bottom: ${lmnts.Base.Grid.Gutter.Bottom + 'px'};\n  padding-left: ${lmnts.Base.Grid.Gutter.Left + 'px'};\n  padding-right: ${lmnts.Base.Grid.Gutter.Right + 'px'};\n  border: ${lmnts.Base.Size / 3 + 'px'} solid ${props => props.borderColor};\n  background-color: ${props => props.wrapBg};\n  transition: all ${lmnts.Anim.Page.Duration + 's'} ${lmnts.Anim.Page.Function};\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: ${lmnts.Base.Screen.Sm + \"px\"}) {\n    padding-top: ${lmnts.Base.Grid.Gutter.Top/2 + 'px'};\n    padding-bottom: ${lmnts.Base.Grid.Gutter.Bottom/2 + 'px'};\n    padding-left: ${lmnts.Base.Grid.Gutter.Left/2 + 'px'};\n    padding-right: ${lmnts.Base.Grid.Gutter.Right/2 + 'px'};\n    border: ${lmnts.Base.Size / 6 + 'px'} solid ${props => props.borderColor};\n  }\n`\n\nconst PageGrid = ({ children, borderColor, wrapBg }) => (\n  <PageInner borderColor={borderColor} wrapBg={wrapBg}>\n    {children}\n  </PageInner>\n)\n\nexport default PageGrid\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { createGlobalStyle } from 'styled-components'\nimport * as lmnts from '../data/Styles'\nimport PageGrid from '../components/PageGrid'\n\nconst GlobalStyle = createGlobalStyle`\n\n  /* Reset CSS */\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure, \n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  body {\n    font-family: ${lmnts.Fnt.Body};\n    min-height: 100vh;\n    width: 100vw;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n\n  * {\n    box-sizing: border-box\n  }\n\n  /* Typography Styles */\n\n  body {\n    font-family: ${lmnts.Fnt.Body};\n  }\n  h1, h2, h3, h4, h5, h6 {\n    font-family: ${lmnts.Fnt.Header};\n  }\n\n  /* Palette */\n  body { \n    background-color: ${props => props.bgColor};\n    color: ${lmnts.Clr.Navy};\n  }\n`\n\nconst Layout = ({ children, borderColor, bgColor, wrapBg }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <GlobalStyle bgColor={props => bgColor} />\n        <Helmet>\n          <link\n            href=\"https://fonts.googleapis.com/css?family=Poppins:500\"\n            rel=\"stylesheet\"\n          />\n        </Helmet>\n        <PageGrid wrapBg={props => wrapBg} borderColor={props => borderColor}>\n          {children}\n        </PageGrid>\n      </>\n    )}\n  />\n)\n\nexport default Layout\n"],"sourceRoot":""}